version: '3'

services:
    mailtrap:
        image: eaudeweb/mailtrap
        container_name: ${PROJECT_PREFIX}_mailtrap
        restart: unless-stopped
        ports:
            - ${MAILTRAP_PORT}:80

    redis:
        container_name: ${PROJECT_PREFIX}_redis
        image: redis:alpine3.17
        restart: unless-stopped
        ports:
            - "6379:6379"
        command: redis-server --save 20 1 --loglevel warning --requirepass dev

    nginx:
        ports:
            - "${HTTP_PORT}:80"
        build:
            context: ./containers/nginx
            dockerfile: ./Dockerfile
            args:
                USER_ID: "$USER_ID"
                GROUP_ID: "$GROUP_ID"
                PROJECT_PREFIX: "$PROJECT_PREFIX"
                DOCUMENT_ROOT: "$DOCUMENT_ROOT"
        container_name: ${PROJECT_PREFIX}_webserver
        depends_on:
            - postgres
        volumes:
            - ./../../:/var/www/html
            - ./logs/nginx:/var/log/nginx
        links:
            - php
        restart: unless-stopped
        environment:
            - APP_ENV=${APP_ENV}
            - PROJECT_PREFIX=${PROJECT_PREFIX}

    php:
        build:
            context: ./containers/php
            dockerfile: ./Dockerfile
            args:
                USER_ID: ${USER_ID}
                GROUP_ID: ${GROUP_ID}
                APP_ENV: "$APP_ENV"
        container_name: ${PROJECT_PREFIX}_php
        volumes:
            - ./../../:/var/www/html
            - ./logs/php:/var/log/php
            - ./data/sessions:/var/www/sessions
        links:
            - postgres
            - redis
        restart: unless-stopped
        environment:
            PHP_IDE_CONFIG: serverName=${XDEBUG_SERVER_NAME}
            APP_ENV: ${APP_ENV}
            PROJECT_PREFIX: "$PROJECT_PREFIX"
            DB_CONNECTION: "pgsql"
            DB_DATABASE: ${DB_DATABASE}
            DB_USERNAME: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
        extra_hosts:
            - "host.docker.internal:host-gateway"

    postgres:
        container_name: ${PROJECT_PREFIX}_postgres
        build:
            context: ./containers/postgres
            dockerfile: ./Dockerfile
            args:
                USER_ID: "$USER_ID"
                GROUP_ID: "$GROUP_ID"
        environment:
            TZ: 'Europe/Moscow'
            PGTZ: 'Europe/Moscow'
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PGDATA: "/var/lib/postgresql/data/${PROJECT_PREFIX}"
        volumes:
            - ./data/postgres:/var/lib/postgresql/data
            - ./logs/postgres:/var/log/postgresql/
        ports:
            - "5432:5432"
        restart: unless-stopped

    postgres_test:
        container_name: ${PROJECT_PREFIX}_postgres_test
        image: postgres:14.5
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - "5433:5432"
        restart: unless-stopped
